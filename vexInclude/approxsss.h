/*
 * PROPRIETARY INFORMATION.  This software is proprietary to
 * Side Effects Software Inc., and is not to be reproduced,
 * transmitted, or disclosed in any way without written permission.
 *
 * Produced by:
 *  Side Effects Software Inc
 *  123 Front Street West
 *  Toronto, Ontario
 *  Canada   M5V 3E7
 *  416-504-9876
 *
 * NAME:     approxsss.h
 *
 * COMMENTS: Inverse CDF LUT and diffusion profile from the paper
 *           "Approximate Reflectance Profiles for Efficient Subsurface Scattering"
 */

#ifndef __approxsss_h__
#define __approxsss_h__

#include <math.h>

#define APPROXSSS_ICDF_N 512

// diffusion profile
// r: sample distance
// d: mean free path/scatter distance
float approxsss_diffusion(float r; float d)
{
    return (exp(-r/d) + exp(-r/(3*d))) / (8*M_PI * d*r);
}

float approxsss_icdf(int idx)
{
    float icdf_lut[] =
    {
	0.000001, 0.003940, 0.007881, 0.011821, 0.015761, 0.019702, 0.023642, 0.027582,
	0.031528, 0.035551, 0.039574, 0.043597, 0.047621, 0.051644, 0.055667, 0.059690,
	0.063738, 0.067844, 0.071951, 0.076058, 0.080164, 0.084271, 0.088377, 0.092484,
	0.096649, 0.100841, 0.105033, 0.109225, 0.113417, 0.117609, 0.121801, 0.126013,
	0.130291, 0.134570, 0.138848, 0.143127, 0.147405, 0.151684, 0.155962, 0.160322,
	0.164688, 0.169053, 0.173419, 0.177785, 0.182151, 0.186516, 0.190951, 0.195406,
	0.199861, 0.204316, 0.208771, 0.213225, 0.217680, 0.222204, 0.226749, 0.231294,
	0.235839, 0.240385, 0.244930, 0.249475, 0.254102, 0.258739, 0.263376, 0.268013,
	0.272651, 0.277288, 0.281938, 0.286668, 0.291398, 0.296128, 0.300857, 0.305587,
	0.310317, 0.315098, 0.319922, 0.324747, 0.329571, 0.334396, 0.339220, 0.344050,
	0.348970, 0.353890, 0.358810, 0.363730, 0.368650, 0.373570, 0.378559, 0.383576,
	0.388593, 0.393610, 0.398627, 0.403644, 0.408709, 0.413824, 0.418939, 0.424055,
	0.429170, 0.434285, 0.439438, 0.444653, 0.449869, 0.455084, 0.460300, 0.465515,
	0.470769, 0.476086, 0.481402, 0.486719, 0.492035, 0.497352, 0.502720, 0.508139,
	0.513558, 0.518978, 0.524397, 0.529816, 0.535312, 0.540835, 0.546358, 0.551882,
	0.557405, 0.562936, 0.568565, 0.574193, 0.579822, 0.585450, 0.591078, 0.596763,
	0.602499, 0.608234, 0.613969, 0.619705, 0.625448, 0.631292, 0.637135, 0.642978,
	0.648821, 0.654665, 0.660588, 0.666542, 0.672495, 0.678448, 0.684402, 0.690408,
	0.696473, 0.702537, 0.708601, 0.714665, 0.720766, 0.726943, 0.733119, 0.739296,
	0.745473, 0.751680, 0.757971, 0.764262, 0.770553, 0.776843, 0.783169, 0.789576,
	0.795982, 0.802389, 0.808795, 0.815251, 0.821773, 0.828296, 0.834818, 0.841341,
	0.847939, 0.854581, 0.861223, 0.867864, 0.874506, 0.881258, 0.888019, 0.894779,
	0.901540, 0.908338, 0.915220, 0.922103, 0.928986, 0.935869, 0.942845, 0.949850,
	0.956856, 0.963861, 0.970904, 0.978033, 0.985162, 0.992292, 0.999421, 1.006666,
	1.013922, 1.021178, 1.028433, 1.035766, 1.043149, 1.050531, 1.057913, 1.065344,
	1.072856, 1.080367, 1.087879, 1.095419, 1.103060, 1.110702, 1.118343, 1.126002,
	1.133775, 1.141548, 1.149321, 1.157108, 1.165016, 1.172923, 1.180830, 1.188758,
	1.196800, 1.204842, 1.212884, 1.220963, 1.229141, 1.237318, 1.245496, 1.253736,
	1.262051, 1.270366, 1.278681, 1.287094, 1.295549, 1.304005, 1.312461, 1.321057,
	1.329654, 1.338251, 1.346898, 1.355637, 1.364375, 1.373114, 1.381966, 1.390850,
	1.399733, 1.408656, 1.417686, 1.426715, 1.435745, 1.444893, 1.454070, 1.463247,
	1.472483, 1.481809, 1.491134, 1.500467, 1.509942, 1.519417, 1.528892, 1.538483,
	1.548112, 1.557741, 1.567447, 1.577229, 1.587012, 1.596842, 1.606779, 1.616716,
	1.626679, 1.636774, 1.646869, 1.656975, 1.667230, 1.677485, 1.687743, 1.698155,
	1.708568, 1.718984, 1.729560, 1.740137, 1.750725, 1.761464, 1.772203, 1.782968,
	1.793875, 1.804781, 1.815735, 1.826806, 1.837877, 1.849028, 1.860270, 1.871513,
	1.882871, 1.894282, 1.905692, 1.917268, 1.928852, 1.940481, 1.952240, 1.963998,
	1.975861, 1.987795, 1.999728, 2.011833, 2.023943, 2.036124, 2.048417, 2.060709,
	2.073154, 2.085625, 2.098159, 2.110811, 2.123464, 2.136280, 2.149118, 2.162040,
	2.175066, 2.188100, 2.201314, 2.214529, 2.227873, 2.241277, 2.254747, 2.268342,
	2.281947, 2.295736, 2.309525, 2.323467, 2.337453, 2.351545, 2.365726, 2.379977,
	2.394361, 2.408780, 2.423360, 2.437947, 2.452734, 2.467520, 2.482496, 2.497489,
	2.512654, 2.527853, 2.543213, 2.558619, 2.574186, 2.589806, 2.605583, 2.621414,
	2.637413, 2.653461, 2.669689, 2.685955, 2.702420, 2.718909, 2.735612, 2.752346,
	2.769277, 2.786273, 2.803428, 2.820688, 2.838068, 2.855607, 2.873222, 2.891042,
	2.908920, 2.927001, 2.945180, 2.963495, 2.981977, 3.000533, 3.019328, 3.038213,
	3.057255, 3.076471, 3.095779, 3.115309, 3.134964, 3.154741, 3.174758, 3.194885,
	3.215169, 3.235672, 3.256299, 3.277103, 3.298120, 3.319272, 3.340599, 3.362159,
	3.383868, 3.405740, 3.427867, 3.450161, 3.472627, 3.495321, 3.518232, 3.541325,
	3.564608, 3.588152, 3.611907, 3.635863, 3.660031, 3.684443, 3.709115, 3.734004,
	3.759116, 3.784459, 3.810071, 3.835970, 3.862111, 3.888498, 3.915146, 3.942065,
	3.969249, 3.996758, 4.024543, 4.052621, 4.080993, 4.109673, 4.138659, 4.167953,
	4.197578, 4.227531, 4.257815, 4.288445, 4.319437, 4.350780, 4.382487, 4.414568,
	4.447034, 4.479890, 4.513149, 4.546808, 4.580894, 4.615396, 4.650325, 4.685702,
	4.721557, 4.757894, 4.794710, 4.832010, 4.869797, 4.908086, 4.946974, 4.986378,
	5.026313, 5.066866, 5.108005, 5.149725, 5.192101, 5.235124, 5.278758, 5.323152,
	5.368192, 5.413982, 5.460528, 5.507833, 5.555914, 5.604853, 5.654583, 5.705266,
	5.756814, 5.809294, 5.862796, 5.917274, 5.972793, 6.029382, 6.087155, 6.146068,
	6.206223, 6.267611, 6.330342, 6.394443, 6.459996, 6.527018, 6.595635, 6.665920,
	6.737918, 6.811709, 6.887442, 6.965129, 7.044959, 7.126960, 7.211379, 7.298251,
	7.387747, 7.480025, 7.575269, 7.673711, 7.775518, 7.880942, 7.990237, 8.103750,
	8.221677, 8.344530, 8.472717, 8.606612, 8.746819, 8.893946, 9.048697, 9.211922,
	9.384601, 9.567831, 9.763016, 9.971832, 10.196425, 10.439116, 10.703373, 10.993021,
	11.313890, 11.673209, 12.081398, 12.554235, 13.115891, 13.807406, 14.707523, 16.000000
    };

    return icdf_lut[idx];
}

// r0: uniformly distributed random number [0-1)
float approxsss_dist_lookup(float r0)
{
    float findex = r0 * (APPROXSSS_ICDF_N-1);
    int d0 = int(floor(findex));
    int d1 = d0+1;
    float fraction = findex - d0;
    return lerp(approxsss_icdf(d0), approxsss_icdf(d1), fraction);
}

#endif
